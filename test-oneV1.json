{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "admin password"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "admin username"
      }
    },
    "diskType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "StandardSSD_LRS",
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "disk storage type"
      }
    },
    "nicNamePrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Network interface name prefix"
      }
    },
    "vmCount": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 1,
      "maxValue": 6,
      "metadata": {
        "description": " How many VMs to provision"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "defaultValue": "lab01-vm",
      "metadata": {
        "description": "VM name prefix"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "VM size"
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "lab01-vnet",
      "metadata": {
        "description": "Type the virtual macvhine name Virtual network name"
      }
    },
    "pipName": {
      "type": "string",
      "defaultValue": "pip01",
      "metadata": {
        "description": "Public IP Name "
      }
    }


  },
  "variables": {
    "commands": "#!/bin/sh\ntouch /etc/yum.repos.d/mariadb.repo\necho \"[mariadb]\" >> /etc/yum.repos.d/mariadb.repo\necho \"name = MariaDB\" >> /etc/yum.repos.d/mariadb.repo\necho \"baseurl = http://yum.mariadb.org/10.4/centos7-amd64\" >> /etc/yum.repos.d/mariadb.repo\necho \"gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB\" >> /etc/yum.repos.d/mariadb.repo\necho \"gpgcheck=1\" >> /etc/yum.repos.d/mariadb.repo\nyum install MariaDB-server MariaDB-client -y\nservice firewalld stop\nsystemctl disable firewalld",
    "subnet0Name": "web",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnetName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnet0Name'))]",
    "webNetworkSecurityGroupName": "az30305a-web-nsg",
    
    "storageAccountName": "[concat('az30005a', uniqueString(subscription().subscriptionId,resourceGroup().id, deployment().name))]",
    "storageAccountType": "Standard_LRS",
    "imageReference": {
      "publisher": "RedHat",
      "offer": "RHEL",
      "sku": "7.8",
      "version": "latest"
    }

  },
  "resources": [
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('nicNamePrefix'), copyindex())]",
      "apiVersion": "2020-11-01",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('vmCount')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"

      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "publicIPAddress":{
              "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('pipName'),copyindex()))]"
            }


            }
            
            
          }
        ]
      }
    },

    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmNamePrefix'), copyindex())]",
      "apiVersion": "2021-11-01",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('vmCount')]"
      },
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "nicLoop"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmNamePrefix'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "customData":"[base64(concat(variables('commands')))]"
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('diskType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('nicNamePrefix'),copyindex()))]"
            }
          ]

        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "apiVersion": "2020-11-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('webNetworkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet0Name')]",
            "properties": {
              "addressPrefix": "10.0.1.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('webNetworkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('pipName'),copyindex())]",
      "apiVersion": "2020-11-01",
      "copy": {
        "name": "PIPCount",
        "count": "[parameters('vmCount')]"
      },
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2019-06-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "Storage",
      "properties": {}
    },


    {
      "name": "[variables('webNetworkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "location": "[resourceGroup().location]",
      "comments": "Network Security Group for the web subnet",
      "properties": {
        "securityRules": [
          {
            "name": "custom-allow-ssh",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "protocol": "*",
              "destinationPortRange": "22",
              "access": "Allow",
              "direction": "inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    }
    

  ]
}


